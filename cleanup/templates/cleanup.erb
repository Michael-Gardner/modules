#! /usr/bin/ruby

require 'fileutils'

directory = "<%= @directory %>"
age = "<%= @age %>"
pattern = Array.new
<%  @pattern.each do |e| -%>
pattern.push("<%= e %>")
<% end -%>

# constants
Minute = 60
Hour = 3600
Day = 86400
Week = 604800

# setup age modifcation
age_mod    = age[-1]
age_scalar = age.chop!.to_i
divisor = 1
divisor = case age_mod
when "m" then (Minute * age_scalar)
when "h" then (Hour * age_scalar)
when "d" then (Day * age_scalar)
when "w" then (Week * age_scalar)
end

# jump into target directory and start parsing for child directories
# and match the to our pattern
Dir.chdir(directory)
dir_contains = Array.new
dir_list = Array.new
pattern.each { |p| dir_contains.push(Dir[p]) }
dir_contains.flatten!.each do |f|
  File.directory?(f) ? dir_list.push(f) : nil
end

# now do our age metrics and remove the directories that meet our
# requirements
dir_list.each do |d|
  if ((Time.now - File.stat(d).mtime).to_i / divisor) > 1.0 then
    FileUtils.rm_rf(d)
  end
end